{"projectName":"ServiceTestProject","totalTests":5,"passed":2,"failed":3,"skipped":0,"coveredLines":23,"missedLines":2,"coveragePercentage":92.0,"moduleStatus":[{"name":"bar","totalTests":2,"passed":1,"failed":1,"skipped":0,"tests":[{"name":"testFunction1","status":"PASSED"},{"name":"testFunction","status":"FAILURE","failureMessage":"Failed! \n\tat ballerina.test:createBallerinaError(assert.bal:41)\n\t   ballerina.test:assertTrue(assert.bal:51)\n\t   myOrg.bar.tests.main_test:testFunction(tests/main_test.bal:26)"}]},{"name":"myService","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testServiceFunction","status":"PASSED"}]},{"name":"math","totalTests":2,"passed":0,"failed":2,"skipped":0,"tests":[{"name":"testFunction2","status":"FAILURE","failureMessage":"Assertion Failed!: expected \u00275\u0027 but found \u0027error division by zero \u0027 \n\tat ballerina.test:createBallerinaError(assert.bal:41)\n\t   ballerina.test:assertEquals(assert.bal:82)\n\t   myOrg.math.tests.divide_test:testFunction2(tests/divide_test.bal:5)"},{"name":"testFunction1","status":"FAILURE","failureMessage":"Assertion Failed!: expected \u0027test1test2\u0027 but found \u0027test1test2test3\u0027 \n\tat ballerina.test:createBallerinaError(assert.bal:41)\n\t   ballerina.test:assertEquals(assert.bal:82)\n\t   myOrg.math.tests.add_test:testFunction1(tests/add_test.bal:5)"}]}],"moduleCoverage":[{"name":"bar","coveredLines":7,"missedLines":1,"coveragePercentage":87.5,"sourceFiles":[{"name":"mainBal/main.bal","coveredLines":[8,9,10,15,16,23,24],"missedLines":[12],"coveragePercentage":87.5,"sourceCode":"import ballerina/io;\n\n# Prints `Hello World`.\n\npublic function main() {\n    // counter\n    // test\n    int a \u003d 10;\n    if (a \u003d\u003d 10) {\n        io:println(\"a is equal to 10\");\n    } else {\n        io:println(\"a is notttttt equal to 10\");\n    }\n   \n    printHello();\n}\n\n\n// Prints hello\n# Prints hello\npublic function printHello() {\n    // Prints hello \n    io:println(\"Hello World!!\");\n}\n"}]},{"name":"myService","coveredLines":5,"missedLines":1,"coveragePercentage":83.33333,"sourceFiles":[{"name":"main.bal","coveredLines":[10,19,20,23,24],"missedLines":[21],"coveragePercentage":83.33333,"sourceCode":"// A system module containing protocol access constructs\n// Module objects referenced with \u0027http:\u0027 in code\nimport ballerina/http;\nimport ballerina/io;\n\n# A service is a network-accessible API\n# Advertised on \u0027/hello\u0027, port comes from listener endpoint\nservice hello on new http:Listener(9393) {\n\n    # A resource is an invokable API method\n    # Accessible at \u0027/hello/sayHello\n    # \u0027caller\u0027 is the client invoking this resource \n\n    # + caller - Server Connector\n    # + request - Request\n    resource function sayHello(http:Caller caller, http:Request request) {\n        // Send a response back to caller\n        // -\u003e indicates a synchronous network-bound call\n        error? result \u003d caller-\u003erespond(\"Hello Test!\");\n        if (result is error) {\n            io:println(\"Error in responding\", result);\n        }\n    }\n}\n\n"}]},{"name":"math","coveredLines":11,"missedLines":0,"coveragePercentage":100.0,"sourceFiles":[{"name":"divide.bal","coveredLines":[6,7,9,10,12],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"# Divides two integers.\n#\n#\n# + return - Return Value Description\npublic function divideInt() returns (int|error) {\n    int a \u003d 10;\n    int b \u003d 0;\n    string result;\n    if (b \u003d\u003d 0) {\n        return error(\"division by zero\");\n    } else {\n        return a/b;\n    }\n}\n"},{"name":"add.bal","coveredLines":[6,7,8,10,11,15],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"# Adds two strings.\n#\n#\n# + return - Return Value Description\npublic function joinStrings() returns string {\n    string a \u003d \"test1\";\n    string b \u003d \"test2\";\n    any c \u003d \"test3\";\n    string result;\n    if (c is string) {\n        result \u003d a+b+c;\n    } else {\n        result \u003d a+b;\n    }\n    return result;\n}\n"}]}]}